#cloud-config
preserve_hostname: false
hostname: ${name}
fqdn: ${fqdn}
manage_etc_hosts: true
repo_upgrade: all

packages:
  - docker

bootcmd:
 - while [[ ! -b $(readlink -f /dev/nvme1n1) ]]; do echo "waiting for the disk..."; sleep 3; done
 - mkfs.xfs -L data /dev/nvme1n1
 - mkdir -p /data

mounts:
 - [ "/dev/nvme1n1", "/data", "xfs", "defaults,nofail,noatime", "0", "2" ]

runcmd:
  - systemctl enable docker
  - service docker start
  - usermod -a -G docker ec2-user
  - yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  - percona-release setup -y psmdb-42
  - yum -y install percona-server-mongodb
  - percona-release setup -y pmm2-client
  - yum -y install pmm2-client
  - chown mongod:mongod /data/ /etc/mongo-key
  - chmod 600 /etc/mongo-key
  - systemctl enable mongod
  - systemctl start mongod
  - systemctl status mongod
  - timeout 50 bash -c 'until curl --insecure -I https://${pmm_server_endpoint}; do sleep 3; done'
  - mongo --port 27019 /tmp/init.js
  - pmm-admin config --metrics-mode=push --force --server-insecure-tls --server-url='https://admin:${pmm_password}@${pmm_server_endpoint}' ${fqdn} generic ${name}
  - pmm-admin add mongodb --port 27019 --username=pmm --password='${mongodb_42_pmm_user_password}' --server-url='https://admin:${pmm_password}@${pmm_server_endpoint}' --server-insecure-tls

write_files:
- path: /etc/mongod.conf
  content: |
    sharding:
      clusterRole: configsvr

    replication:
      replSetName: ${replica_set_name}

    storage:
      dbPath: /data
      journal:
        enabled: true

    systemLog:
      destination: file
      logAppend: true
      path: /var/log/mongo/mongod.log

    processManagement:
      fork: true
      pidFilePath: /var/run/mongod.pid

    net:
      port: 27019
      bindIp: 0.0.0.0

    operationProfiling:
      mode: all
      slowOpThresholdMs: 200
      rateLimit: 100

    security:
      keyFile: /etc/mongo-key

- path: /tmp/init.js
  content: |
    rs.secondaryOk()
    rs.initiate(
      {
        _id: "${replica_set_name}",
        configsvr: true,
        members: [
          { _id : 0, host : "mongo-42-cfg-0.${route53_name}:27019" },
          { _id : 1, host : "mongo-42-cfg-1.${route53_name}:27019" },
          { _id : 2, host : "mongo-42-cfg-2.${route53_name}:27019" }
        ]
      }
    )

- path: /etc/mongo-key
  content: |
    ${mongodb_42_keyfile}

- path: /root/.mongorc.js
  content: |
    db = connect("localhost:27019/")

- path: /root/.bashrc
  append: true
  content: |
      alias mng='mongo --nodb'
