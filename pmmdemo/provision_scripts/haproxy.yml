#cloud-config
preserve_hostname: false
hostname: ${name}
fqdn: ${fqdn}
manage_etc_hosts: true
repo_upgrade: all

packages:
  - docker

runcmd:
  - systemctl enable --now docker
  - usermod -a -G docker ec2-user
  - docker run --net host -d --name haproxy -v /etc/haproxy:/usr/local/etc/haproxy:ro haproxy:2.6
  - yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  - percona-release setup -y pmm2-client
  - yum install -y pmm2-client
  - pmm-admin config --metrics-mode=push --force --server-insecure-tls --server-url='https://admin:${pmm_admin_password}@${pmm_server_endpoint}' ${fqdn} generic ${name}
  - pmm-admin add haproxy --listen-port=8404 --metrics-path=/metrics
  - yum -y install http://yum.puppet.com/puppet8-release-el-7.noarch.rpm
  - yum -y install puppet-agent
  - source /etc/profile.d/puppet-agent.sh ; puppet config set server ${pmm_server_host} --section main
  - source /etc/profile.d/puppet-agent.sh ; puppet config set fact_value_length_soft_limit 16384 --section main
  - source /etc/profile.d/puppet-agent.sh ; puppet ssl bootstrap
  - source /etc/profile.d/puppet-agent.sh ; puppet resource service puppet ensure=running enable=true
  - source /etc/profile.d/puppet-agent.sh ; puppet agent --test

write_files:
  - path: /etc/haproxy/haproxy.cfg
    content: |
      global
              log 127.0.0.1   local0
              log 127.0.0.1   local1 notice
              maxconn 4096
              user        haproxy
              group       haproxy
              daemon
              stats socket /var/lib/haproxy/stats

      defaults
              log     global
              mode    http
              option  tcplog
              option  dontlognull
              retries 3
              maxconn 2000
              timeout connect      5000
              timeout client      50000
              timeout server     50000

      listen mysql-cluster
          bind 0.0.0.0:3306
          mode tcp
          balance roundrobin
          option mysql-check user haproxy_check

          server db01 percona-xtradb-cluster-0:3306 rise 3 fall 3
          server db02 percona-xtradb-cluster-1:3306 rise 3 fall 3
          server db03 percona-xtradb-cluster-2:3306 rise 3 fall 3

      frontend stats
          bind *:8404
          http-request use-service prometheus-exporter if { path /metrics }
          stats enable
          stats uri /stats
          stats refresh 10s
