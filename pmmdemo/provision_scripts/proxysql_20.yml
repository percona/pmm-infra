#cloud-config
fqdn: ${fqdn}
hostname: ${name}
manage_etc_hosts: true
prefer_fqdn_over_hostname: true
preserve_hostname: false
package_upgrade: true
package_update: true

packages:
  - bind-utils
  - curl

runcmd:
  - dnf config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
  - dnf -y install consul
  - systemctl enable consul && systemctl start consul
  - dnf -y install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  - percona-release setup -y pmm3-client
  - dnf -y install pmm-client
  - curl -s ${scripts_path}/waiter.sh -o /usr/local/bin/waiter.sh
  - chmod 0755 /usr/local/bin/waiter.sh
  - bash /usr/local/bin/waiter.sh readyz ${name} ${fqdn} ${environment_name}
  - pmm-admin config --az="us-east-1f" --region="us-east-1" --metrics-mode=push --force --server-insecure-tls --server-url='https://admin:${pmm_admin_password}@${pmm_server_endpoint}' ${fqdn} generic ${name}
  - dnf -y install https://github.com/ncabatoff/process-exporter/releases/download/v0.8.5/process-exporter_0.8.5_linux_amd64.rpm
  - bash /usr/local/bin/waiter.sh process-exporter ${name} ${fqdn} ${environment_name}
  - pmm-admin add external --group=processes --listen-port=9256 --environment="prod" --service-name="${name}-processes" --cluster="processes-cluster"
  - percona-release setup -y ps-80
  - dnf -y install proxysql2 percona-server-client
  - systemctl enable proxysql && systemctl start proxysql
  - bash /usr/local/bin/waiter.sh proxysql ${name} ${fqdn} ${environment_name}
  - pmm-admin add proxysql --username=admin --password='${proxysql_admin_password}' --server-insecure-tls --server-url='https://admin:${pmm_admin_password}@${pmm_server_endpoint}' --cluster=proxysql-cluster "${name}" "127.0.0.1:6032"

# TODO replace to admin-stats_credentials user

write_files:
  - path: /etc/resolv.conf
    permissions: "0644"
    content: |
      ; generated by #cloud-config
      search ${local_domain} ec2.internal
      options timeout:2 attempts:5
      nameserver 10.0.0.2

  - path: /etc/consul.d/consul.hcl
    permissions: "0644"
    content: |
      bind_addr = "0.0.0.0"
      bootstrap_expect=3
      client_addr = "0.0.0.0"
      data_dir = "/opt/consul"
      enable_local_script_checks = true
      node_name="${name}"
      retry_join = ["pmm-server", "sysbench", "bastion"]
      server = true
      ui_config{
        enabled = true
      }

  - path: /etc/consul.d/proxysql-service.json
    permissions: "0644"
    content: |
      {
        "service": {
          "address": "${fqdn}",
          "name": "proxysql",
          "port": 3306,
          "tags": ["${name}"],
          "checks": [
          {
            "args": ["mysqladmin", "ping", "--host=127.0.0.1", "--port=3306", "--user=sysbench-proxysql-ps", "--password=${percona_server_80_password}"],
            "interval": "3s",
            "name": "Check for ProxySQL service on 3306 running using mysqladmin",
            "notes": "Check for ProxySQL service on 3306 running using mysqladmin. Availability of ProxySQL service throughput is reflective of this check.",
            "success_before_passing": 3,
            "Timeout": "1s"
          },
          {
            "args": ["mysqladmin", "ping", "--host=127.0.0.1", "--port=6032", "--user=admin", "--password=${proxysql_admin_password}"],
            "interval": "3s",
            "name": "Check for ProxySQL Admin service on 6032 running using mysqladmin",
            "notes": "Check for ProxySQL Admin service on 6032 running using mysqladmin. Monitoring of ProxySQL Admin is enabled with this service.",
            "success_before_passing": 3,
            "timeout": "1s"
          },
          {
            "args": ["/bin/bash", "/tmp/proxysql-admin-script.sh"],
            "interval": "3s",
            "name": "Check for ProxySQL Admin service on 6032 running a script",
            "notes": "Check for ProxySQL Admin service on 6032 running a script. Monitoring of ProxySQL Admin is enabled with this service.",
            "success_before_passing": 3,
            "timeout": "1s"
          }]
        }
      }

  - path: /tmp/proxysql-admin-script.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      # Set MySQL server credentials
      MYSQL_USER="admin"
      MYSQL_PASSWORD="${proxysql_admin_password}"
      MYSQL_SOCK="/tmp/proxysql_admin.sock"
      while true ; do
        # Attempt to connect using MySQL Shell with a 2-second timeout
        mysql --user="$MYSQL_USER" --password="$MYSQL_PASSWORD" --socket="$MYSQL_SOCK" --connect-timeout=2 -BNe "SELECT * FROM runtime_mysql_servers"
        # Check the exit status of mysql to determine connection success
        if [[ $? -eq 0 ]]; then
          echo "Sucessfully connected to ProxySQL Admin service."
          exit 0
        else
          echo "Connection attempt failed.  Sleeping..."
          sleep 1
        fi
      done

  - path: /etc/consul.d/process-exporter-check-http.json
    permissions: "0644"
    content: |
      {
        "service": {
          "address": "${fqdn}",
          "name": "process-exporter",
          "port": 9256,
          "tags": ["${name}"],
          "checks": [{
            "http": "http://${fqdn}:9256/metrics",
            "interval": "3s",
            "success_before_passing": 3,
            "timeout": "5s"
          }]
        }
      }

  - path: /usr/local/bin/waiter.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      # Script to do all the waiting
      # File contents will be downloaded from githubcontent.com

  - path: /etc/proxysql.cnf
    content: |
      datadir="/var/lib/proxysql"
      errorlog="/var/lib/proxysql/proxysql.log"

      mysql_galera_hostgroups=
      (
        {
          # PXC 8 Hostgroups
          writer_hostgroup=1000
          backup_writer_hostgroup=2000
          reader_hostgroup=3000
          offline_hostgroup=4000
          active=1
          max_writers=1
          writer_is_also_reader=0
          max_transactions_behind=0
        }
      )

      mysql_group_replication_hostgroups=
      (
        {
          # Percona Group Replication 8.0 Hostgroups
          writer_hostgroup=10000
          backup_writer_hostgroup=20000
          reader_hostgroup=30000
          offline_hostgroup=40000
          active=1
          max_writers=1
          writer_is_also_reader=0
          max_transactions_behind=0
        }
      )

      mysql_variables=
      {
        threads=1
        max_connections=50000
        default_query_delay=0
        default_query_timeout=36000000
        have_compress=true
        poll_timeout=2000
        interfaces="0.0.0.0:3306"
        default_schema="information_schema"
        stacksize=1048576
        server_version="8.0.19"
        connect_timeout_server=3000
        monitor_username="proxysql"
        monitor_password="${proxysql_monitor_password}"
        monitor_history=600000
        monitor_connect_interval=60000
        monitor_ping_interval=10000
        monitor_read_only_interval=1500
        monitor_read_only_timeout=500
        ping_interval_server_msec=120000
        ping_timeout_server=500
        commands_stats=true
        sessions_sort=true
        connect_retries_on_failure=10
      }
      admin_variables=
      {
        admin_credentials="admin:${proxysql_admin_password}"
        mysql_ifaces="127.0.0.1:6032;/tmp/proxysql_admin.sock"
      }

      mysql_servers =
      (
        { address="percona-server-80-0", port=3306, hostgroup=10, max_connections=200 },
        { address="percona-server-80-1", port=3306, hostgroup=20, max_replication_lag = 30 },
        { address="percona-server-84-0", port=3306, hostgroup=30, max_connections=200 },
        { address="percona-server-84-1", port=3306, hostgroup=40, max_replication_lag = 30 },
        { address="percona-xtradb-cluster-0", port=3306, hostgroup=1000 },
        { address="percona-xtradb-cluster-1", port=3306, hostgroup=3000 },
        { address="percona-xtradb-cluster-2", port=3306, hostgroup=3000 },
        { address="percona-server-84_gr-1", port=3306, hostgroup=10000, max_connections=200 },
        { address="percona-server-84_gr-2", port=3306, hostgroup=20000, max_connections=200 },
        { address="percona-server-84_gr-3", port=3306, hostgroup=20000, max_connections=200 },
      )

      mysql_users:
      (
        { username = "sysbench-proxysql-percona-gr" , password = "${percona_server_84_gr_password}" , default_hostgroup = 10000 , active = 1 },
        { username = "sysbench-proxysql-ps" , password = "${percona_server_80_password}" , default_hostgroup = 10 , active = 1 },
        { username = "sysbench-proxysql-ps84" , password = "${percona_server_84_password}" , default_hostgroup = 30 , active = 1 },
        { username = "sysbench-proxysql-pxc" , password = "${percona_xtradb_cluster_80_password}" , default_hostgroup = 1000 , active = 1 },
      )

      mysql_query_rules:
      (
        { rule_id =  10, destination_hostgroup = 10,    username = "sysbench-proxysql-ps",          match_digest = "^SELECT.*FOR UPDATE", active = 1, apply = 1 },
        { rule_id =  20, destination_hostgroup = 20,    username = "sysbench-proxysql-ps",          match_digest = "^SELECT", active = 1, apply = 1 },
        { rule_id =  30, destination_hostgroup = 30,    username = "sysbench-proxysql-ps81",        match_digest = "^SELECT.*FOR UPDATE", active = 1, apply = 1 },
        { rule_id =  40, destination_hostgroup = 40,    username = "sysbench-proxysql-ps81",        match_digest = "^SELECT", active = 1, apply = 1 },
        { rule_id =  70, destination_hostgroup = 10000, username = "sysbench-proxysql-percona-gr",  match_digest = "^SELECT.*FOR UPDATE", active = 1, apply = 1 },
        { rule_id =  80, destination_hostgroup = 20000, username = "sysbench-proxysql-percona-gr",  match_digest = "^SELECT", active = 1, apply = 1 },
        { rule_id =  90, destination_hostgroup = 1000,  username = "sysbench-proxysql-pxc",         match_digest = "^SELECT.*FOR UPDATE", active = 1, apply = 1 },
        { rule_id = 100, destination_hostgroup = 2000,  username = "sysbench-proxysql-pxc",         match_digest = "^SELECT", active = 1, apply = 1 },
      )

      scheduler=
      (
      )

  - path: /root/.my.cnf
    permissions: "0400"
    content: |
      [client]
      user=admin
      password='${proxysql_admin_password}'
      port=6032
      host=127.1
      prompt='ProxySQL Admin>'
