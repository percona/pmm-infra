#cloud-config
fqdn: ${fqdn}
hostname: ${name}
manage_etc_hosts: true
prefer_fqdn_over_hostname: true
preserve_hostname: false
package_upgrade: true
package_update: true

packages:
  - bind-utils
  - curl
  - jq

runcmd:
  - dnf config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
  - dnf -y install consul
  - systemctl enable consul
  - systemctl start consul
  - dnf -y install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  - percona-release setup -y pmm3-client
  - dnf -y install pmm-client
  - curl -s ${scripts_path}/waiter.sh -o /usr/local/bin/waiter.sh
  - chmod 0755 /usr/local/bin/waiter.sh
  - bash /usr/local/bin/waiter.sh readyz ${name} ${fqdn} ${environment_name}
  - pmm-admin config --az="us-east-1f" --region="us-east-1" --metrics-mode=push --force --server-insecure-tls --server-url='https://admin:${pmm_admin_password}@${pmm_server_endpoint}' ${fqdn} generic ${name}
  - dnf -y install https://github.com/ncabatoff/process-exporter/releases/download/v0.8.5/process-exporter_0.8.5_linux_amd64.rpm
  - bash /usr/local/bin/waiter.sh process-exporter ${name} ${fqdn} ${environment_name}
  - pmm-admin add external --group=processes --listen-port=9256 --environment="prod" --service-name="${name}-processes" --cluster="processes-cluster"
  - percona-release enable valkey experimental
  - dnf -y install valkey
  - chown -R valkey:valkey /etc/valkey* /var/lib/valkey* /var/log/valkey*
  - bash /tmp/valkey-init.sh
  - systemctl enable valkey && systemctl restart valkey
  - bash /tmp/build-memtier-benchmark.sh
  - bash /tmp/install-valkey-exporter.sh
  - bash /usr/local/bin/waiter.sh valkey-exporter ${name} ${fqdn} ${environment_name}
  - pmm-admin add external --group=valkey --listen-port=9121 --environment="prod" --service-name="valkey-valkey" --cluster="valkey-cluster"

write_files:
  - path: /etc/resolv.conf
    permissions: "0644"
    content: |
      ; generated by #cloud-config
      search ${local_domain} ec2.internal
      options timeout:2 attempts:5
      nameserver 10.0.0.2

  - path: /etc/consul.d/consul.hcl
    permissions: "0644"
    content: |
      bind_addr = "0.0.0.0"
      bootstrap_expect=3
      client_addr = "0.0.0.0"
      data_dir = "/opt/consul"
      enable_local_script_checks = true
      node_name="${name}"
      retry_join = ["pmm-server", "sysbench", "bastion"]
      server = true
      ui_config{
        enabled = true
      }

  - path: /etc/consul.d/process-exporter-check-http.json
    permissions: "0644"
    content: |
      {
        "service": {
          "address": "${fqdn}",
          "name": "process-exporter",
          "port": 9256,
          "tags": ["${name}"],
          "checks": [{
            "http": "http://${fqdn}:9256/metrics",
            "interval": "3s",
            "success_before_passing": 3,
            "timeout": "5s"
          }]
        }
      }

  - path: /etc/consul.d/valkey-exporter-check-http.json
    permissions: "0644"
    content: |
      {
        "service": {
          "address": "${fqdn}",
          "name": "valkey-exporter",
          "port": 9121,
          "tags": ["${name}"],
          "checks": [{
            "http": "http://${fqdn}:9121/metrics",
            "interval": "3s",
            "success_before_passing": 3,
            "timeout": "5s"
          }]
        }
      }

  - path: /tmp/valkey-init.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      echo "maxmemory 768mb" >>/etc/valkey/valkey.conf
      echo "maxmemory-policy allkeys-lfu" >>/etc/valkey/valkey.conf
      echo "appendonly yes" >>/etc/valkey/valkey.conf

  - path: /tmp/build-memtier-benchmark.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      # Script to install Valkey benchmark tool
      cd /tmp
      dnf -y install autoconf automake make gcc-c++ pcre-devel zlib-devel libevent-devel openssl-devel
      curl -Ls https://github.com/RedisLabs/memtier_benchmark/archive/refs/tags/2.1.0.tar.gz -o 2.1.0.tar.gz
      tar -xvzf 2.1.0.tar.gz
      cd /tmp/memtier_benchmark-2.1.0/
      autoreconf -ivf
      ./configure && make && make install
      systemctl enable memtier-benchmark.service
      systemctl start memtier-benchmark.service

  - path: /tmp/install-valkey-exporter.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      # Script to install Valkey exporter
      cd /tmp
      curl -Ls https://github.com/oliver006/redis_exporter/releases/download/v1.67.0/redis_exporter-v1.67.0.linux-amd64.tar.gz -o redis_exporter-v1.67.0.linux-amd64.tar.gz
      tar zxvf redis_exporter-v1.67.0.linux-amd64.tar.gz
      cd redis_exporter-v1.67.0.linux-amd64/
      mv redis_exporter /usr/local/bin/
      /usr/local/bin/redis_exporter &

  - path: /usr/local/bin/waiter.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      # Script to do all the waiting
      # File contents will be downloaded from githubcontent.com

  - path: /etc/valkey/memtier-run.sh
    permissions: "0744"
    content: |
      #!/bin/bash
      
      while true; do
        # 'insert only'
        /usr/local/bin/memtier_benchmark --run-count=5 --hide-histogram --rate-limiting=200 --test-time=60 --ratio=1:0 --randomize --expiry-range=1-180 --data-size-range=100-1024
        # 'read write'
        /usr/local/bin/memtier_benchmark --run-count=5 --hide-histogram --rate-limiting=200 --test-time=60 --ratio=1:4 --randomize --expiry-range=1-180 --data-size-range=100-1024
      done

  - path: /usr/lib/systemd/system/memtier-benchmark.service
    content: |
      [Unit]
      Description=memtier benchmark for valkey
      After=network.target

      [Service]
      Type=simple
      Restart=on-failure
      RestartSec=10
      ExecStart=/etc/valkey/memtier-run.sh

      [Install]
      WantedBy=multi-user.target
