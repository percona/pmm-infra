#cloud-config
preserve_hostname: false
hostname: ${name}
fqdn: ${fqdn}
manage_etc_hosts: true
repo_upgrade: all

packages:
  - docker
  - nmap-ncat

runcmd:
  - systemctl enable docker
  - service docker start
  - usermod  -a -G docker ec2-user
  - chmod +x /tmp/cert.sh
  - bash /tmp/cert.sh
  - rm /tmp/cert.sh
  - docker run -v /data:/ssl:ro -v /etc/nginx.conf:/etc/nginx/nginx.conf --restart always --net host --name nginx -d nginx:1.21.6
  - until nc -z localhost 80; do sleep 1; done
  - docker exec nginx apt update
  - docker exec nginx apt install -y certbot python3-certbot-nginx
  - docker exec nginx certbot --agree-tos -m ${email} -d ${domain}
  - echo "${pmm_admin_pass}" > /root/admin_password

write_files:
- path: /etc/nginx.conf
  content: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        access_log  /var/log/nginx/access.log combined;

        sendfile        on;

        keepalive_timeout  65;

        gzip  on;

        # redirect all to https
        server {
            listen 80 default_server;

            server_name _;

            return 301 https://$host$request_uri;
        }

        server {
            listen          443 ssl http2 default_server;
            server_name     ${domain};

            ssl_certificate /ssl/cert/certificate.crt;
            ssl_certificate_key /ssl/cert/certificate.key;
            ssl_trusted_certificate /ssl/cert/ca-certs.pem;
            ssl_dhparam /ssl/cert/dhparam.pem;

            location / {
                proxy_pass      http://pmm_server;
            }
        }

        upstream pmm_server {
            server pmm-server.${project_name}.local:80;
        }
    }
- path: /tmp/cert.sh
  content: |
    #!/bin/sh

    set -o errexit

    mkdir -p /data/cert/

    if [ ! -e /data/cert/dhparam.pem ]; then
        openssl dhparam -out /data/cert/dhparam.pem 2048
    fi

    if [ ! -e /data/cert/ca-certs.pem ]; then
        # Fetch letsencrypt chain
        curl https://letsencrypt.org/certs/isrgrootx1.pem                          > /data/cert/ca-certs.pem
        curl https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.pem       >> /data/cert/ca-certs.pem
        curl https://letsencrypt.org/certs/letsencryptauthorityx1.pem             >> /data/cert/ca-certs.pem
        curl https://www.identrust.com/certificates/trustid/root-download-x3.html >> /data/cert/ca-certs.pem
    fi

    if [ ! -e /data/cert/certificate.conf ]; then
        echo "
    [ req ]
    distinguished_name = req_distinguished_name
    prompt             = no

    [ req_distinguished_name ]
    O                  = Main Org.
    " > /data/cert/certificate.conf
    fi

    if [ ! -e /data/cert/certificate.key -o ! -e /data/cert/certificate.crt ]; then
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout /data/cert/certificate.key \
            -out    /data/cert/certificate.crt \
            -config /data/cert/certificate.conf
    fi
