#cloud-config
preserve_hostname: false
hostname: ${name}
fqdn: ${fqdn}
manage_etc_hosts: true
repo_upgrade: all

bootcmd:
  - while [[ ! -b $(readlink -f /dev/nvme1n1) ]]; do echo "waiting for the disk..."; sleep 5; done
  - mkfs.xfs -L data /dev/nvme1n1
  - mkdir -p /data

mounts:
  - ["/dev/nvme1n1", "/data", "xfs", "defaults,noatime", "0", "2"]

runcmd:
  - yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  - percona-release setup -y ppg-13
  - yum -y install percona-postgresql13-server percona-pg-stat-monitor13
  - percona-release setup -y pmm2-client
  - yum -y install pmm2-client
  - chown postgres:postgres /data
  - sed -i 's/\/var\/lib\/pgsql\/13\/data\//\/data/g' /usr/lib/systemd/system/postgresql-13.service
  - systemctl daemon-reload
  - /usr/pgsql-13/bin/postgresql-13-setup initdb
  - echo 'host    all             all             10.0.2.0/24             password' >> /data/pg_hba.conf
  - echo "listen_addresses = '*'" >> /data/postgresql.conf
  - echo "shared_preload_libraries = 'pg_stat_monitor'" >> /data/postgresql.conf
  - echo "pg_stat_monitor.pgsm_query_max_len = 2048" >> /data/postgresql.conf
  - echo "pg_stat_monitor.pgsm_enable_query_plan = 1" >> /data/postgresql.conf
  - systemctl start postgresql-13
  - chmod +x /tmp/init-postgres.sh
  - runuser -l postgres -c 'bash /tmp/init-postgres.sh'
  - timeout 50 bash -c 'until curl --insecure -I https://${pmm_server_endpoint}; do sleep 3; done'
  - pmm-admin config --metrics-mode=push --force --server-insecure-tls --server-url='https://admin:${pmm_password}@${pmm_server_endpoint}' ${fqdn} generic ${name}
  - pmm-admin add postgresql --username=pmm --password='${postgres_pmm_password}' --server-url='https://admin:${pmm_password}@${pmm_server_endpoint}' --server-insecure-tls --query-source="pgstatmonitor" --environment=demo --service-name=${name}

write_files:
  - path: /tmp/init-postgres.sh
    content: |
      #!/bin/bash
      psql -c "CREATE ROLE pmm WITH SUPERUSER LOGIN CONNECTION LIMIT 10 ENCRYPTED PASSWORD '${postgres_pmm_password}'"
      psql -c "CREATE ROLE sysbench WITH LOGIN CONNECTION LIMIT 100 ENCRYPTED PASSWORD '${postgres_sysbench_password}'"
      psql -c "CREATE DATABASE sbtest"
      psql -c "GRANT ALL PRIVILEGES ON sbtest TO sysbench"
      psql -c "CREATE EXTENSION pg_stat_monitor"
      psql -c "select pg_reload_conf()"
