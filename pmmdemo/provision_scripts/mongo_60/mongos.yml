#cloud-config
fqdn: ${fqdn}
hostname: ${name}
manage_etc_hosts: true
prefer_fqdn_over_hostname: true
preserve_hostname: false
package_upgrade: true
package_update: true

packages:
  - bind-utils
  - curl
  - jq

runcmd:
  - dnf config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
  - dnf -y install consul
  - systemctl enable consul && systemctl start consul
  - dnf -y install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  - percona-release setup -y pmm3-client
  - dnf -y install pmm-client
  - curl -s ${scripts_path}/waiter.sh -o /usr/local/bin/waiter.sh
  - curl -s ${scripts_path}/waiter_mongo.sh -o /usr/local/bin/waiter_mongo.sh
  - chmod 0755 /usr/local/bin/waiter.sh /usr/local/bin/waiter_mongo.sh
  - bash /usr/local/bin/waiter.sh readyz ${name} ${fqdn} ${environment_name}
  - pmm-admin config --az="us-east-1f" --region="us-east-1" --metrics-mode=push --force --server-insecure-tls --server-url='https://admin:${pmm_password}@${pmm_server_endpoint}' ${fqdn} generic ${name}
  - dnf -y install https://github.com/ncabatoff/process-exporter/releases/download/v0.8.5/process-exporter_0.8.5_linux_amd64.rpm
  - bash /usr/local/bin/waiter.sh process-exporter ${name} ${fqdn} ${environment_name}
  - pmm-admin add external --group=processes --listen-port=9256 --environment="prod" --service-name="${name}-processes" --cluster="processes-cluster"
  - percona-release setup -y psmdb-60
  - PERCONA_TELEMETRY_DISABLE=1 dnf -y install percona-server-mongodb-mongos percona-mongodb-mongosh
  - mkdir -p /var/log/mongos /var/run/mongos
  - chown mongod:mongod /etc/mongo-key /var/log/mongos /var/run/mongos && chmod 600 /etc/mongo-key
  - sed -i 's/enforcing/permissive/g' /etc/selinux/config && /sbin/setenforce 0
  - systemctl enable mongos
  - systemctl start mongos
  - bash /usr/local/bin/waiter_mongo.sh mongos ${name} ${fqdn}
  - bash /usr/local/bin/wait_all_shards.sh
  - mongosh --port 27019 -u perconaadmin -p '${mongodb_60_percona_admin_password}' /tmp/init.js /tmp/users.js
  - pmm-admin add mongodb --port=27019 --username=pmm --password='${mongodb_60_pmm_user_password}' --cluster='mdb60-cluster' --replication-set='mongo-60-cfg' --environment='prod' --service-name=${name} --enable-all-collectors

write_files:
  - path: /etc/resolv.conf
    permissions: "0644"
    content: |
      ; generated by #cloud-config
      search ${local_domain} ec2.internal
      options timeout:2 attempts:5
      nameserver 10.0.0.2

  - path: /etc/consul.d/consul.hcl
    permissions: "0644"
    content: |
      bind_addr = "0.0.0.0"
      client_addr = "0.0.0.0"
      data_dir = "/opt/consul"
      enable_local_script_checks = true
      node_name="${name}"
      retry_join = ["pmm-server", "sysbench", "bastion"]
      server = false

  - path: /etc/consul.d/mongos-service.json
    permissions: "0644"
    content: |
      {
        "service": {
          "address": "${fqdn}",
          "name": "mongos",
          "port": 27019,
          "tags": ["${name}", "mongos"],
          "checks": [{
              "args": ["/usr/local/bin/mongo_alive.sh"],
              "interval": "5s",
              "success_before_passing": 3
          }]
        }
      }

  - path: /etc/consul.d/process-exporter-check-http.json
    permissions: "0644"
    content: |
      {
        "service": {
          "address": "${fqdn}",
          "name": "process-exporter",
          "port": 9256,
          "tags": ["${name}"],
          "checks": [{
            "http": "http://${fqdn}:9256/metrics",
            "interval": "3s",
            "success_before_passing": 3,
            "timeout": "5s"
          }]
        }
      }

  - path: /usr/local/bin/waiter.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      # Script to do all the waiting
      # File contents will be downloaded from githubcontent.com

  - path: /usr/local/bin/waiter_mongo.sh
    permissions: "0755"
    content: |
      # Content downloaded from githubcontent.com

  - path: /usr/local/bin/mongo_alive.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      /bin/mongosh --port 27019 --eval "db.runCommand(\"ping\").ok" -quiet
      if [[ $? -eq 1 ]]; then
        exit 2
      fi
      exit $?

  - path: /usr/local/bin/wait_all_shards.sh
    permissions: "0755"
    content: |
      #!/bin/bash

      # Wait for mongos
      echo "-- Waiting for all 9 mongo servers..."

      for (( i=1 ; i<=100 ; i++ )); do
        shardCount=0
        primaryCount=0
        for j in cfg rs-shard-0 rs-shard-1; do
          cnt=$(dig +short @127.0.0.1 -p 8600 mongo-60-$${j}.service.consul SRV | wc -l)
          echo "mongo-60-$${j} has $${cnt}/3 members online"
          if [[ $cnt -eq 3 ]]; then
            ((shardCount++))
          fi
          prim=$(dig +short @127.0.0.1 -p 8600 mongo-60-$${j}-primary.service.consul SRV | wc -l)
          echo "mongo-60-$${j} has $${prim} primary member"
          if [[ $prim -eq 1 ]]; then
            ((primaryCount++))
          fi
        done
        if [[ $shardCount -eq 3 ]] && [[ $primaryCount -eq 3 ]]; then
          echo "-- Looks like all 3 mongo shards are online with primary"
          sleep 2
          break
        fi
        echo "-- Only $${shardCount} mongo shards online; retry $${i}/100"
        sleep 2
      done

  - path: /etc/mongos.conf
    content: |
      sharding:
        configDB: ${replica_set_name}/mongo-60-cfg-0.${route53_name}:27019,mongo-60-cfg-1.${route53_name}:27019,mongo-60-cfg-2.${route53_name}:27019

      net:
        port:	27019
        bindIp: 0.0.0.0

      systemLog:
        destination: file
        logAppend: true
        path: /var/log/mongos/mongos.log

      security:
        keyFile: /etc/mongo-key

      processManagement:
        pidFilePath: /var/run/mongos/mongos.pid

      operationProfiling:
        slowOpThresholdMs: 200
        rateLimit: 100

  - path: /etc/mongo-key
    content: |
      ${mongodb_60_keyfile}

  - path: /usr/lib/systemd/system/mongos.service
    content: |
      [Unit]
      Description=High-performance, schema-free document-oriented database
      After=network.target

      [Service]
      User=mongod
      Group=mongod
      Type=simple
      ExecStart=/bin/mongos --config /etc/mongos.conf
      PIDFile=/var/run/mongos/mongos.pid
      LimitFSIZE=infinity
      LimitCPU=infinity
      LimitAS=infinity
      LimitNOFILE=64000
      LimitNPROC=64000
      LimitMEMLOCK=infinity
      TasksMax=infinity
      TasksAccounting=false

      [Install]
      WantedBy=multi-user.target

  - path: /tmp/init.js
    content: |
      sh.addShard("shard-0/mongo-60-rs-0-0.${route53_name}:27019,mongo-60-rs-0-1.${route53_name}:27019,mongo-60-rs-0-2.${route53_name}:27019")
      sh.addShard("shard-1/mongo-60-rs-1-0.${route53_name}:27019,mongo-60-rs-1-1.${route53_name}:27019,mongo-60-rs-1-2.${route53_name}:27019")

  - path: /tmp/users.js
    content: |
      db.getSiblingDB("admin").createUser({
        user: "ycsb",
        pwd: "${mongodb_ycsb_password}",
        roles: [
            { role: "readWriteAnyDatabase", db: "admin" },
            { role: "clusterManager", db: "admin" },
            { role: "clusterMonitor", db: "admin" },
            { role: "enableSharding", db: "ycsb" }
        ]
      });
